name: Build and Release ROOT

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'build_root.sh'
      - '.github/workflows/build.yml'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true  # Stop all builds if one fails
      matrix:
        root-version: ['6.28.04', '6.30.04', '6.32.04']
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up environment
      run: |
        sudo apt-get update
        sudo apt-get install -y curl jq

    - name: Check if release exists
      id: check_release
      run: |
        ROOT_VERSION=${{ matrix.root-version }}
        RELEASE_TAG="root-v${ROOT_VERSION}-python${{ matrix.python-version }}"
        
        # Check if release exists
        RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/tags/${RELEASE_TAG}" | \
          jq -r '.id // empty')
        
        if [ ! -z "$RELEASE_ID" ]; then
          echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          echo "RELEASE_ID=$RELEASE_ID" >> $GITHUB_ENV
        else
          echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
        fi

    - name: Delete existing release if it exists
      if: env.RELEASE_EXISTS == 'true'
      run: |
        curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/releases/${{ env.RELEASE_ID }}"
        
        # Delete the tag
        git push --delete origin "root-v${{ matrix.root-version }}-python${{ matrix.python-version }}" || true

    - name: Build ROOT
      run: |
        chmod +x build_root.sh
        ./build_root.sh ${{ matrix.python-version }} ${{ matrix.root-version }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: root-v${{ matrix.root-version }}-python${{ matrix.python-version }}
        release_name: ROOT v${{ matrix.root-version }} for Python ${{ matrix.python-version }}
        body: |
          Automated build of ROOT v${{ matrix.root-version }} for Python ${{ matrix.python-version }}
          
          This release contains:
          - ROOT version: ${{ matrix.root-version }}
          - Python version: ${{ matrix.python-version }}
          - Built on Ubuntu latest
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/root_v${{ matrix.root-version }}_Ubuntu_Python${{ matrix.python-version }}.zip
        asset_name: root_v${{ matrix.root-version }}_Ubuntu_Python${{ matrix.python-version }}.zip
        asset_content_type: application/zip
